structure:

	- cloud meanings:
		- dead/alive:


A)		- desktop is dead. long live cloud.
-cloudiness
	1 sub-application: IaaS


B)		- monolithic software suites are dead. long live apps.
-flexible servers
	2 sub-application: elastic IaaS
-platform as a service
	3 sub-application: PaaS
-hosted software
	4 application level: SaaS


C)		- proprietary should be dead, because it's sick. long live open.
-freedom in the cloud


D)		- sql is dead. long live data.
-storage
	5 application level: storage


E)		- pc is dead. long live service end-point devices.
-synchronization
	6 application level: sync

F)		- OO is dead. long live REST.
-demo (show php code, show effect):
  -synchronous ajax (have a knight-rider thingy or something to show js blocking)
  -asynchronous ajax
  -asynchronous synchronization
  -localStorage
  -cache manifest



other quips:
open source cloud is a contradiction
the web is the cross-platform platform we've all been dreaming of
native content-oriented apps are like a television without a remote. they provide bookmarking, wallet space, confinedness/familiarity, but break hypertext web. can we stop them? web intents.
separating application from data.

-------------------------------



meaning 1: IaaS
meaning 1: IaaS = virtual servers
meaning 2: elastic servers
meaning 2: elastic servers = nothing new
desktop is dead.
desktop is dead. long live cloud
post-PC, post-server
html5 as a cross-platform platform.

meaning 3: SaaS: present

SQL is dead.
SQL is dead. long live data

big data, small data, open data, personal data, content-addressable data, scalable data, decentralized data, disaggregated data.

meaning 4: PaaS: app cloud = something in between a program and a widget

proprietary is sick.
proprietary is sick. we want open
open source SaaS is a contradiction.
apptorrent, CouchApp, PhoneGap, b2g.

meaning 5: remote storage
meaning 6: sync: future

OO is dead.
OO is dead. long live REST

separate application from data. service end-points

syncStorage: the web's answer to iCloud.

what you should do:
	- use appcache (demo myfavouritesandwich, alt-tab, disconnecting network)
	- avoid having RTTs in your UI. immediate feedback, asynchronous synchronization
	- use php for generating json, not for server-side templating and generating html. DHTML is passe.
	- offer webfinger
	- enable CORS
	- accept browserid, NOT F***book


meanings of cloud:
IaaS, elastic IaaS, SaaS, PaaS, storage, sync

Cloud as a Disservice
coarse

A cloudy blue-sky brainstorm
There are at least six different meanings of 'cloud'. All of them have to do with servers and elasticity of resources, but the impact of each one on the architecture and revenue model of your application can be very different. We'll visit each of them, and see which of them are really very different from when computing was about mainframes and terminals. PHP was born in the PC era, got big during the e-commerce boom, survived web2.0, and is now getting ready for post-PC. The web is facing a fierce battle against native apps during the next two years. It's sometimes hard to keep up with all these differences and changes in the landscape. That's why it's often easier to call it all just 'cloud'. But cloudy wordings lead to cloudy judgement, so in this overview we'll apply a bit of structure to the different sections of the skyline again.

Besides all the many benefits of different kinds of cloudiness, we'll dwell on some of the very dangerous side-effects of what Richard Stallman calls 'careless computing'. We'll discuss why 'open source cloud' is a contradiction, and how the 'decentralized web' movement is working on achieving 'freedom in the cloud', in much the same way as linux has given us freedom on the desktop and freedom on the server.

We'll end with a demo of how to move the point-of-view of your html-based applications from the server to the client, which is what we will all have to do if the open web is to stand a chance against Apple's iCloud.






hi!


well … your keynote is the opener for the whole conference day. there's a special day that day – the cloud day – but there's no need to mention the sessions in your talk. if you insist, these are the talks:

cloud vs. virtualization
from code to cloud: php on red hat's openshift
large-scale data processing with hadoop and php
manage cloud infrastructures in php

the fifth talk will follow on monday, maybe tuesday.

±tom

